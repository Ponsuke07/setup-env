---
- name: check existence of neovim
  stat: path=/usr/local/bin/nvim
  register: nvim_bin

- name: check existence of dein.vim
  stat: path={{ vim_bundle_dir }}/repos/github.com/Shougo/dein.vim/
  register: dein

- block:
  - name: install build tools for neovim
    apt:
      state: present
      update_cache: yes
      cache_valid_time: 86400
      pkg:
        - make
        - build-essential
        - ninja-build
        - gettext
        - libtool
        - libtool-bin
        - autoconf
        - automake
        - cmake
        - g++
        - pkg-config
        - unzip
    become: yes

  - name: clone neovim from github
    git: repo=https://github.com/neovim/neovim.git
         dest=/tmp/neovim
         version=stable

  - name: build and install neovim
    shell: "{{ item }}"
    args:
      chdir: /tmp/neovim
    with_items:
      - make
      - make CMAKE_BUILD_TYPE=Release
      - make install
    become: yes

  - name: Setup alius for neovim
    lineinfile:
      dest=~/.bashrc
      line={{ item }}
    with_items:
      - alias vim='nvim'

  when: not nvim_bin.stat.exists

- name: install packages for neovim
  apt:
    state: present
    update_cache: yes
    cache_valid_time: 86400
    pkg:
      - aspell
      - cscope
      - ctags
      - openjdk-8-jdk
      - openjdk-8-jre
  become: yes

- name: install python modules for neovim
  pip:
    name:
      - vim-vint
      - pynvim

- name: cleanup vim conf dir
  shell: "rm -rf {{ vim_conf_dir }}"

- name: create
  file: path={{ vim_conf_dir }}/{{ item }} state=directory
  with_items:
    - "init"
    - "plugins"

- block:
  - name: create vim bundle dir
    file: path={{ vim_bundle_dir }} state=directory

  - name: install dein.vim
    get_url: url={{ dein_inst_url }}
             sha256sum={{ dein_inst_csum }}
             dest=/tmp/installer.sh force=True

  - name: install dein.vim
    shell: "bash /tmp/installer.sh {{ vim_bundle_dir }}"

  when: not dein.stat.exists

- name: generate .vimrc
  template: src=vimrc.j2 dest=~/.vimrc

- name: create .confif/nvim
  file:
    path: ~/.config/nvim
    state: directory

- name: generate init.vim for nvim
  template: src=nvim.init.j2 dest=~/.config/nvim/init.vim

- name: generate vim configs for users
  template: src={{ item }} dest={{ vim_conf_dir }}/init/{{ item |basename |regex_replace('\.j2$', '') }}
  with_fileglob:
    - ../templates/init/*.j2

- name: generate vim configs for plugins
  template: src={{ item }} dest={{ vim_conf_dir }}/plugins/{{ item |basename |regex_replace('\.j2$', '') }}
  with_fileglob:
    - ../templates/plugins/*.j2

